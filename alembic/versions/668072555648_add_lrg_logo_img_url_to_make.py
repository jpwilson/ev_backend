"""Add lrg_logo_img_url to Make

Revision ID: 668072555648
Revises: 
Create Date: 2023-10-31 12:10:07.666802

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = "668072555648"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Add the lrg_logo_img_url column with a default value
    op.add_column(
        "makes",
        sa.Column(
            "lrg_logo_img_url",
            sa.VARCHAR(),
            nullable=True,
            server_default="https://render.fineartamerica.com/images/rendered/default/canvas-print/6.5/8/mirror/break/images/artworkimages/medium/3/404-design-not-found-funny-error-caution-designers-warning-program-gift-thomas-larch-canvas-print.jpg",
        ),
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the lrg_logo_img_url column
    op.drop_column("makes", "lrg_logo_img_url")
    op.create_table(
        "people",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column("age", sa.INTEGER(), nullable=True),
        sa.Column("location", sa.VARCHAR(), nullable=True),
        sa.Column("university_degree", sa.VARCHAR(), nullable=True),
        sa.Column("current_company", sa.VARCHAR(), nullable=True),
        sa.Column("skills", sa.VARCHAR(), nullable=True),
        sa.Column("strengths", sqlite.JSON(), nullable=True),
        sa.Column("weaknesses", sqlite.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_people_id", "people", ["id"], unique=False)
    op.create_table(
        "makes",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=True),
        sa.Column("ceo_id", sa.INTEGER(), nullable=True),
        sa.Column("ceo_pay", sa.FLOAT(), nullable=True),
        sa.Column("headquarters", sa.VARCHAR(), nullable=True),
        sa.Column("founding_date", sa.VARCHAR(), nullable=True),
        sa.Column("market_cap", sa.FLOAT(), nullable=True),
        sa.Column("revenue", sa.FLOAT(), nullable=True),
        sa.Column("num_ev_models", sa.INTEGER(), nullable=True),
        sa.Column("first_ev_model_date", sa.VARCHAR(), nullable=True),
        sa.Column("unionized", sa.BOOLEAN(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ceo_id"],
            ["people.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_makes_name", "makes", ["name"], unique=False)
    op.create_index("ix_makes_id", "makes", ["id"], unique=False)
    op.create_table(
        "cars",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("make_id", sa.INTEGER(), nullable=True),
        sa.Column("model", sa.VARCHAR(), nullable=True),
        sa.Column("submodel", sa.VARCHAR(), nullable=True),
        sa.Column("generation", sa.VARCHAR(), nullable=True),
        sa.Column("image_url", sa.VARCHAR(), nullable=True),
        sa.Column("trim_first_released", sa.VARCHAR(), nullable=True),
        sa.Column("carmodel_first_released", sa.VARCHAR(), nullable=True),
        sa.Column("current_price", sa.FLOAT(), nullable=True),
        sa.Column("price_history", sqlite.JSON(), nullable=True),
        sa.Column("customer_and_critic_rating", sa.FLOAT(), nullable=True),
        sa.Column("vehicle_class", sa.VARCHAR(), nullable=True),
        sa.Column("color_options", sqlite.JSON(), nullable=True),
        sa.Column("performance_0_60", sa.FLOAT(), nullable=True),
        sa.Column("top_speed", sa.FLOAT(), nullable=True),
        sa.Column("power", sa.FLOAT(), nullable=True),
        sa.Column("torque", sa.FLOAT(), nullable=True),
        sa.Column("drive_type", sa.VARCHAR(), nullable=True),
        sa.Column("battery_capacity", sa.FLOAT(), nullable=True),
        sa.Column("range_city_cold", sa.FLOAT(), nullable=True),
        sa.Column("range_highway_cold", sa.FLOAT(), nullable=True),
        sa.Column("range_combined_cold", sa.FLOAT(), nullable=True),
        sa.Column("range_highway_mid", sa.FLOAT(), nullable=True),
        sa.Column("range_city_mid", sa.FLOAT(), nullable=True),
        sa.Column("range_combined_mid", sa.FLOAT(), nullable=True),
        sa.Column("battery_max_charging_speed", sa.FLOAT(), nullable=True),
        sa.Column("chargers", sqlite.JSON(), nullable=True),
        sa.Column("yt_review_link", sa.VARCHAR(), nullable=True),
        sa.Column("available_countries", sqlite.JSON(), nullable=True),
        sa.Column("number_of_seats", sa.INTEGER(), nullable=True),
        sa.Column("has_frunk", sa.BOOLEAN(), nullable=True),
        sa.Column("frunk_capacity", sa.FLOAT(), nullable=True),
        sa.Column("has_spare_tire", sa.BOOLEAN(), nullable=True),
        sa.Column("autopilot_features", sqlite.JSON(), nullable=True),
        sa.Column("euroncap_rating", sa.VARCHAR(), nullable=True),
        sa.Column("nhtsa_rating", sa.VARCHAR(), nullable=True),
        sa.ForeignKeyConstraint(
            ["make_id"],
            ["makes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_cars_model", "cars", ["model"], unique=False)
    op.create_index("ix_cars_id", "cars", ["id"], unique=False)
    op.create_table(
        "make_founders_association",
        sa.Column("make_id", sa.INTEGER(), nullable=True),
        sa.Column("person_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["make_id"],
            ["makes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["people.id"],
        ),
    )
    op.create_table(
        "make_person_association",
        sa.Column("make_id", sa.INTEGER(), nullable=True),
        sa.Column("person_id", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(
            ["make_id"],
            ["makes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["people.id"],
        ),
    )
    # ### end Alembic commands ###
